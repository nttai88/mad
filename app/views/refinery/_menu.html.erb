<style>
  .custom-menu{
    position: absolute;
    right: 0;
    top: 0;
  }
  .custom-menu li{float:left; list-style: none; margin-right: 15px;}
</style>
<ul class="custom-menu" >
    <li> <%= link_to "My Page", "/my-page" %> </li>
    <% if refinery_user_signed_in? %>
      <li> <%= link_to "Messages", main_app.messaging_path %> </li>
      <li> <%= link_to "My Settings", main_app.edit_refinery_user_path(current_refinery_user) %> </li>
      <li> <%= link_to "Log out", main_app.destroy_refinery_user_session_path %> </li>
    <% else %>
      <li><%= link_to I18n.t(:sign_in, :scope => 'refinery.sessions.new'), main_app.new_refinery_user_session_path %></li>
      <li><%= link_to I18n.t(:sign_up, :scope => 'refinery.users.new'), main_app.new_refinery_user_registration_path %></li>
    <% end %>
</ul>
<%
  # Collect the root items.
  # ::Refinery::Menu is smart enough to remember all of the items in the original collection.
  @menu_pages.delete_if{|x| x[:title] == "My Page"}
  if (roots = local_assigns[:roots] || (collection ||= @menu_pages).roots).present?
    dom_id ||= 'menu'
    css = [(css || 'menu'), 'clearfix'].flatten.join(' ')
    hide_children = ::Refinery::Setting.find_or_set(:menu_hide_children, false) if hide_children.nil?
-%>
<nav id='<%= dom_id %>' class='<%= css %>'>
  <ul id="menu_list">
    <%= render :partial => '/refinery/menu_branch', :collection => roots,
               :locals => {
                 :hide_children => hide_children,
                 :sibling_count => (roots.length - 1),
                 :menu_levels => local_assigns[:menu_levels],
                 :apply_css => true #if you don't care about class='first' class='last' or class='selected' set apply_css to false for speed.
               } -%>
  </ul>
</nav>
<% end -%>
