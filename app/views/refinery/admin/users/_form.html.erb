<% content_for :javascripts do %>
  <% javascript_include_tag('jquery', 'categories', 'regions') %>
<% end %>
<%= form_for [main_app, :refinery_admin, @user] do |f| %>

  <%= render :partial => "/refinery/admin/error_messages",
             :locals => {
               :object => @user,
               :include_object_name => true
             } %>

  <div class='field'>
    <%= f.label :username %>
    <%= f.text_field :username %>
  </div>
  <div class='field'>
    <%= f.label :email %>
    <%= f.text_field :email %>
  </div>
  <div class='field'>
    <%= f.label :password %>
    <%= f.password_field :password, :autocomplete => 'off' %>
    <% if @user.persisted? %>
      <%= content_tag(:br) %>
      <%= content_tag(:span, t('.blank_password_keeps_current')) %>
    <% end %>
  </div>
  <div class='field'>
    <%= f.label :password_confirmation %>
    <%= f.password_field :password_confirmation, :autocomplete => 'off' %>
  </div>
<% if @user.has_role?(:refinery) %>
  <div class='field plugin_access'>
    <span class='label_with_help'>
      <%= f.label :plugin_access, t('.plugin_access'), :class => "title_label" %>
      <%= link_to "(#{t('.enable_all')})", "", :id => "user_plugins_enable_all" %>
    </span>
    <ul id='plugins' class='checkboxes'>
      <% @available_plugins.each do |plugin| -%>
        <% if ::Refinery::Plugins.always_allowed.names.include?(plugin[:name]) or
              (plugin[:name] == 'refinery_users' and @user.id == current_refinery_user.id) %>
          <%= hidden_field_tag 'user[plugins][]', plugin[:name],
                               :id => "plugins_#{plugin[:name]}" %>
        <% else %>
          <li>
            <%= check_box_tag 'user[plugins][]', plugin[:name],
                              @selected_plugin_names.include?(plugin[:name]),
                              :id => "plugins_#{plugin[:name]}" %>
            <%= f.label 'user[plugins][]',
                        t('title', :scope => "refinery.plugins.#{plugin[:name].downcase}", :default => plugin[:title]),
                        :class => "stripped",
                        :for => "plugins_#{plugin[:name]}" %>
          </li>
        <% end %>
      <% end %>
    </ul>
  </div>
<% end %>

  <% if @user.is_partner? %>
    <div class="field">
      <% if current_refinery_user.has_role?(:refinery) %>
        <label>Categories and Location valid to: </label><%= text_field :profile, "expired_date", :name => "expired_date", :class => "expired_date", :value => @user.profile.selection_expiration_date %>
      <% end %>
      <label>Categoies</label>
      <%= render :partial => "refinery/profile/categories", :locals => {:category => Category.new} %>
    </div>
    <div class="field">
      <label>Locations</label>
      <%= f.fields_for @profile do |fr| %>
        <%= render :partial => "refinery/profile/regions", :locals => {:f => fr} %>
      <% end %>
    </div>
  <% end %>
  <% if current_refinery_user.has_role?(:superuser) and Refinery::Authentication.config.superuser_can_assign_roles %>
    <div class='field role_access'>
      <span class='label_with_help'>
        <%= f.label :role_access, t('.role_access'), :class => "title_label" %>
      </span>
      <ul id='roles' class='checkboxes'>
        <% @available_roles.each do |role|
          downcased_title = (title = role[:title]).downcase -%>
          <li>
            <%= check_box_tag 'user[roles][]', downcased_title, @user.has_role?(title),
                              :id => "roles_#{downcased_title}" %>
            <%= f.label 'user[roles][]',
                        t(downcased_title, :scope => 'refinery.roles', :default => title),
                        :class => 'stripped',
                        :for => "roles_#{downcased_title}" %>
          </li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= render :partial => "/refinery/admin/form_actions",
             :locals => {
               :f => f,
               :continue_editing => false,
               :hide_delete => !current_refinery_user.can_delete?(@user),
               :delete_title => t('delete', :scope => 'refinery.admin.users'),
               :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @user.username)
             } %>
<% end %>

<% content_for :javascripts do %>
  <script>
    $(document).ready(function() {
      $('#user_plugins_enable_all').click(function(e, a) {
        $('div.field.plugin_access ul#plugins li input:checkbox').attr('checked', true);
        e.preventDefault();
      });
      $(".approve.button").click(function(){
        $(".approve-field").val(1);
      });
    });
  </script>
<% end %>
